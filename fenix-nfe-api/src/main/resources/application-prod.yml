# Configuração para ambiente de produção
spring:
  profiles:
    active: prod

# Configuração do banco de dados - Produção
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/nfe_prod}
    username: ${DATABASE_USERNAME:nfe_user}
    password: ${DATABASE_PASSWORD:nfe_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

# Configuração JPA - Produção
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
        connection:
          provider_disables_autocommit: true

# Configuração Flyway - Produção
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: true

# Configuração Redis - Produção
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      ssl: false
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: -1ms
        shutdown-timeout: 200ms

# Configuração RabbitMQ - Produção
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}
    connection-timeout: 30000
    listener:
      simple:
        concurrency: 5
        max-concurrency: 20
        prefetch: 1
        retry:
          enabled: true
          max-attempts: 5
          initial-interval: 2000
          multiplier: 2
          max-interval: 30000
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true
      receive-timeout: 30000
      reply-timeout: 30000

# Configuração de logging - Produção
logging:
  level:
    br.com.fenix.nfe: INFO
    org.springframework.amqp: WARN
    org.springframework.cache: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.security: WARN
  file:
    name: /var/log/nfe-api/application.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 3GB

# Configuração NFe - Produção
nfe:
  ambiente:
    padrao: ${NFE_AMBIENTE:PRODUCAO}
  estado:
    padrao: ${NFE_ESTADO:PR}
  certificado:
    caminho-padrao: ${NFE_CERTIFICADO_PATH:/certificados/}
  fila:
    concurrency:
      emitir-alta: 5
      emitir-normal: 10
      emitir-baixa: 3
      consulta: 15
      eventos: 5
      inutilizacao: 2
    timeout:
      emitir: 180000
      consulta: 30000
      evento: 60000
      inutilizacao: 180000
    retry:
      max-tentativas: 5
      delay-inicial: 5000
      multiplicador: 2
      max-delay: 300000
    dlq:
      enabled: true
      ttl: 86400000  # 24 horas
  cache:
    ttl:
      configuracao: 3600  # 1 hora
      status: 300         # 5 minutos
      consulta: 600       # 10 minutos
    keys:
      configuracao: "nfe:config:{empresa_id}"
      status: "nfe:status:{chave_acesso}"
      consulta: "nfe:consulta:{chave_acesso}"

# Configuração de segurança - Produção
security:
  jwt:
    secret: ${JWT_SECRET:change-this-secret-in-production}
    expiration: ${JWT_EXPIRATION:86400000}  # 24 horas
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://fenix.com}
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "Authorization,Content-Type,X-Requested-With"
    allow-credentials: true

# Configuração de monitoramento - Produção
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99


