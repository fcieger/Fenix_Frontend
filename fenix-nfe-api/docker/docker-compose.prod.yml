version: '3.8'

services:
  # NFe API
  fenix-nfe-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.optimized
    container_name: fenix-nfe-api-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      # Spring Profiles
      - SPRING_PROFILES_ACTIVE=production
      
      # Database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=fenix_nfe
      - DB_USERNAME=fenix_user
      - DB_PASSWORD=${DB_PASSWORD}
      
      # RabbitMQ
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=fenix_user
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # JWT
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=86400000
      
      # Logging
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_BR_COM_FENIX_NFE=DEBUG
      
      # Management
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,prometheus
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      
    volumes:
      - nfe_logs:/app/logs
      - nfe_certificates:/app/certificates
      - nfe_temp:/app/temp
    networks:
      - fenix-network
    depends_on:
      - postgres
      - rabbitmq
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: fenix-postgres-prod
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=fenix_nfe
      - POSTGRES_USER=fenix_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../monitoring/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ../monitoring/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - fenix-network
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fenix_user -d fenix_nfe"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: fenix-rabbitmq-prod
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=fenix_user
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{channel,error}]
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ../monitoring/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - fenix-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    container_name: fenix-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_data:/data
    networks:
      - fenix-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Load Balancer)
  nginx:
    image: nginx:alpine
    container_name: fenix-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../monitoring/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../monitoring/nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - fenix-network
    depends_on:
      - fenix-nfe-api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
  nfe_logs:
    driver: local
  nfe_certificates:
    driver: local
  nfe_temp:
    driver: local
  nginx_logs:
    driver: local

networks:
  fenix-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
