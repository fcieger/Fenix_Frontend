services:
  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - backend
    networks:
      - fenix-network
    restart: unless-stopped

  # Backend NestJS
  backend:
    build:
      context: ../fenix-backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:fenix123@db:5432/fenix
      - JWT_SECRET=seu_jwt_secret_aqui
      - ENCRYPTION_KEY=chave_de_criptografia_super_segura_123456789
      - PORT=3001
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=fenix123
      - DB_DATABASE=fenix
      - TYPEORM_HOST=db
      - TYPEORM_PORT=5432
      - TYPEORM_USERNAME=postgres
      - TYPEORM_PASSWORD=fenix123
      - TYPEORM_DATABASE=fenix
      - DISABLE_SCHEDULE=true
    depends_on:
      - db
      - redis
    networks:
      - fenix-network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    user: "1001:1001"

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=fenix
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=fenix123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fenix-network
    restart: unless-stopped

  # Redis para cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fenix-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - fenix-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  fenix-network:
    driver: bridge
